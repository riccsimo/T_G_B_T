SIMPLE:

Precision - Train Set 0.018084066471163247
Precision - Dev Set 0.625

Confusion Matrix - Train Set
[[3041 2009]
 [   0   37]]
Confusion Matrix - Dev Set
[[562   3]
 [  0   5]]



COMPLEX:

model = tf.keras.models.Sequential(
                [
                    tf.keras.layers.Input(input_shape),
                    tf.keras.layers.Flatten(),
                    tf.keras.layers.Dense(100, activation="relu"),
                    tf.keras.layers.Dense(1, activation="relu"),
                    tf.keras.layers.Dense(1, activation="relu"),                    
		    tf.keras.layers.Dense(1, activation="sigmoid"),
                ]
            )


Precision - Train Set 0.04312354312354312
Precision - Dev Set 0.0

Confusion Matrix - Train Set
[[4229  821]
 [   0   37]]
Confusion Matrix - Dev Set
[[565   0]
 [  5   0]]

impara bene non generalizza
             model = tf.keras.models.Sequential(
                [
                    tf.keras.layers.Input(input_shape),
                    tf.keras.layers.Flatten(),
                    tf.keras.layers.Dense(300, activation="relu"),
                    tf.keras.layers.Dropout(0.5),
                    tf.keras.layers.Dense(100, activation="relu"),
                    tf.keras.layers.Dense(1, activation="sigmoid"),
                ]
            )
            optimizer = Adam(learning_rate=0.001)
            model.compile(optimizer=optimizer, loss='binary_crossentropy', metrics=["accuracy"])